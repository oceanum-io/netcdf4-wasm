name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type checking
      run: npm run typecheck
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
      if: matrix.node-version == '18.x'
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check build dependencies
      run: npm run check-deps
    
    - name: Build TypeScript
      run: npm run build:js
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist/
          build/
        retention-days: 7

  wasm-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Emscripten
      run: |
        npm run install-emscripten
        source build/emsdk/emsdk_env.sh
        echo "EMSDK_PATH=$(pwd)/build/emsdk" >> $GITHUB_ENV
    
    - name: Build WASM (if dependencies available)
      run: |
        if npm run check-deps 2>/dev/null; then
          source build/emsdk/emsdk_env.sh
          npm run build:wasm
        else
          echo "WASM build dependencies not available, skipping"
        fi
      continue-on-error: true
    
    - name: Archive WASM artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: wasm-artifacts
        path: |
          dist/*.wasm
          dist/*.js
        retention-days: 7